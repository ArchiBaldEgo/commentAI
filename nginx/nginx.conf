worker_processes auto;
events {
  worker_connections 1024;
}

http {
  # Basic sane defaults
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 4096;
  server_tokens off;

  # Log in JSON to stdout/stderr for Docker
  log_format json escape=json '{'
    '"time":"$time_iso8601",'
    '"remote_addr":"$remote_addr",'
    '"x_forwarded_for":"$proxy_add_x_forwarded_for",'
    '"request_method":"$request_method",'
    '"request_uri":"$request_uri",'
    '"status":$status,'
    '"body_bytes_sent":$body_bytes_sent,'
    '"request_time":$request_time,'
    '"upstream_response_time":"$upstream_response_time",'
    '"upstream_addr":"$upstream_addr",'
    '"host":"$host",'
    '"uri":"$uri",'
    '"args":"$args",'
    '"http_referer":"$http_referer",'
    '"http_user_agent":"$http_user_agent",'
    '"x_api_key":"$http_x_api_key"'
  '}';

  access_log /dev/stdout json;
  error_log  /dev/stderr warn;

  # Gzip
  gzip on;
  gzip_comp_level 5;
  gzip_min_length 1024;
  gzip_vary on;
  gzip_proxied any;
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

  # Rate limiting
  # Per client IP
  limit_req_zone $binary_remote_addr zone=ip_rate:10m rate=10r/s;
  # Per API key (missing key -> "nokey")
  map $http_x_api_key $ratelimit_key {
    default $http_x_api_key;
    ""      nokey;
  }
  limit_req_zone $ratelimit_key zone=key_rate:10m rate=20r/s;
  # Per endpoint (URI)
  limit_req_zone $uri zone=ep_rate:10m rate=30r/s;

  upstream sentiment_upstream {
    server sentiment:8000;
    keepalive 64;
  }

  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  server {
    listen 80;
    listen [::]:80;

    # Security headers for API responses
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "DENY" always;
    add_header Referrer-Policy "no-referrer" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Content-Security-Policy "default-src 'none'; frame-ancestors 'none';" always;

    # Health endpoint
    location = /health {
      proxy_pass         http://sentiment_upstream;
      proxy_http_version 1.1;
      proxy_set_header   Connection "";
      proxy_set_header   Host $host;
      proxy_read_timeout 30s;
      # Light limits for health
      limit_req zone=ip_rate burst=5 nodelay;
    }

    # Heavier endpoints: stricter limits
    location ~ ^/(feedback_bulk|train_batch)$ {
      proxy_pass         http://sentiment_upstream;
      proxy_http_version 1.1;
      proxy_set_header   Connection "";
      proxy_set_header   Host $host;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Proto $scheme;
      proxy_read_timeout 120s;
      proxy_send_timeout 120s;
      # Apply three limiters: per-IP, per-key, per-endpoint
      limit_req zone=ip_rate burst=10 nodelay;
      limit_req zone=key_rate burst=15 nodelay;
      limit_req zone=ep_rate burst=20 nodelay;
    }

    # Default API endpoints
    location / {
      proxy_pass         http://sentiment_upstream;
      proxy_http_version 1.1;
      proxy_set_header   Connection ""; # enable keep-alive to upstream
      proxy_set_header   Host $host;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Proto $scheme;
      proxy_read_timeout 60s;
      proxy_send_timeout 60s;
      # Apply three limiters: per-IP, per-key, per-endpoint
      limit_req zone=ip_rate burst=20 nodelay;
      limit_req zone=key_rate burst=30 nodelay;
      limit_req zone=ep_rate burst=50 nodelay;
    }
  }
}
